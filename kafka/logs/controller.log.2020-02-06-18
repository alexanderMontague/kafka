[2020-02-06 18:00:39,960] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-06 18:00:39,986] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 6 and epoch zk version is now 6 (kafka.controller.KafkaController)
[2020-02-06 18:00:39,986] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-02-06 18:00:39,989] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-06 18:00:39,990] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-06 18:00:39,992] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-02-06 18:00:39,998] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 229) (kafka.controller.KafkaController)
[2020-02-06 18:00:40,009] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-02-06 18:00:40,015] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-02-06 18:00:40,022] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-02-06 18:00:40,023] INFO [Controller id=1] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2020-02-06 18:00:40,024] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-02-06 18:00:40,024] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-02-06 18:00:40,024] INFO [Controller id=1] Current list of topics in the cluster: Set(TEST_topic) (kafka.controller.KafkaController)
[2020-02-06 18:00:40,025] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-06 18:00:40,028] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-02-06 18:00:40,028] INFO [Controller id=1] List of topics ineligible for deletion: TEST_topic (kafka.controller.KafkaController)
[2020-02-06 18:00:40,029] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-06 18:00:40,029] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(TEST_topic) (kafka.controller.TopicDeletionManager)
[2020-02-06 18:00:40,029] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-06 18:00:40,039] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-06 18:00:40,044] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-06 18:00:40,047] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-06 18:00:40,061] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-06 18:00:40,137] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map([Topic=TEST_topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=TEST_topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=TEST_topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=TEST_topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=TEST_topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=TEST_topic,Partition=0,Replica=0] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-02-06 18:00:40,137] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-06 18:00:40,141] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-06 18:00:40,168] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map(TEST_topic-0 -> OfflinePartition, TEST_topic-2 -> OnlinePartition, TEST_topic-1 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-02-06 18:00:40,168] INFO [Controller id=1] Ready to serve as the new controller with epoch 6 (kafka.controller.KafkaController)
[2020-02-06 18:00:40,170] INFO [Controller id=1] Removing partitions Set() from the list of reassigned partitions in zookeeper (kafka.controller.KafkaController)
[2020-02-06 18:00:40,170] INFO [Controller id=1] No more partitions need to be reassigned. Deleting zk path /admin/reassign_partitions (kafka.controller.KafkaController)
[2020-02-06 18:00:40,172] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-06 18:00:40,172] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-06 18:00:40,172] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-06 18:00:40,173] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-06 18:00:40,173] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2020-02-06 18:00:40,185] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-06 18:00:45,190] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-06 18:00:45,190] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-06 18:00:45,192] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(TEST_topic-0 -> Vector(2, 0)), 1 -> Map(TEST_topic-2 -> Vector(1, 2)), 0 -> Map(TEST_topic-1 -> Vector(0, 1))) (kafka.controller.KafkaController)
[2020-02-06 18:00:45,193] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(TEST_topic-0 -> Vector(2, 0)) (kafka.controller.KafkaController)
[2020-02-06 18:00:45,194] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-02-06 18:00:45,194] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2020-02-06 18:00:45,194] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-02-06 18:00:45,194] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-02-06 18:00:45,195] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map(TEST_topic-1 -> Vector(0, 1)) (kafka.controller.KafkaController)
[2020-02-06 18:00:45,195] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2020-02-06 18:00:45,195] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2020-02-06 18:00:47,644] INFO [Controller id=1] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2020-02-06 18:00:47,644] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-02-06 18:00:47,646] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-02-06 18:00:47,648] INFO [Controller id=1] New broker startup callback for 0 (kafka.controller.KafkaController)
[2020-02-06 18:00:47,650] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9090 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-06 18:00:47,663] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(0) (kafka.controller.KafkaController)
[2020-02-06 18:00:47,664] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 229, 0 -> 252) (kafka.controller.KafkaController)
[2020-02-06 18:00:47,671] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-06 18:00:47,680] DEBUG [Controller id=0] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-02-06 18:00:54,889] DEBUG [Controller id=1] Sending MetadataRequest to Brokers: Vector(1, 0) for TopicPartitions: ArrayBuffer(TEST_topic-1) (kafka.controller.KafkaController)
[2020-02-06 18:00:55,095] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-02-06 18:00:55,095] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-02-06 18:00:55,099] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-02-06 18:00:55,099] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-02-06 18:00:55,101] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-06 18:00:55,103] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-02-06 18:00:55,104] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 229, 0 -> 252, 2 -> 272) (kafka.controller.KafkaController)
[2020-02-06 18:00:55,131] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-06 18:00:55,143] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-02-06 18:01:02,385] DEBUG [Controller id=1] Sending MetadataRequest to Brokers: Vector(1, 0, 2) for TopicPartitions: ArrayBuffer(TEST_topic-2) (kafka.controller.KafkaController)
[2020-02-06 18:01:02,602] DEBUG [Controller id=1] Sending MetadataRequest to Brokers: Vector(1, 0, 2) for TopicPartitions: ArrayBuffer(TEST_topic-0) (kafka.controller.KafkaController)
[2020-02-06 18:05:45,202] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-06 18:05:45,203] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-06 18:05:45,204] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(TEST_topic-0 -> Vector(2, 0)), 1 -> Map(TEST_topic-2 -> Vector(1, 2)), 0 -> Map(TEST_topic-1 -> Vector(0, 1))) (kafka.controller.KafkaController)
[2020-02-06 18:05:45,204] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(TEST_topic-0 -> Vector(2, 0)) (kafka.controller.KafkaController)
[2020-02-06 18:05:45,204] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-02-06 18:05:45,204] INFO [Controller id=1] Starting preferred replica leader election for partitions TEST_topic-0 (kafka.controller.KafkaController)
[2020-02-06 18:05:45,226] INFO [Controller id=1] Partition TEST_topic-0 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-02-06 18:05:45,226] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-02-06 18:05:45,226] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-02-06 18:05:45,226] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map(TEST_topic-1 -> Vector(0, 1)) (kafka.controller.KafkaController)
[2020-02-06 18:05:45,226] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2020-02-06 18:05:45,226] INFO [Controller id=1] Starting preferred replica leader election for partitions TEST_topic-1 (kafka.controller.KafkaController)
[2020-02-06 18:05:45,262] INFO [Controller id=1] Partition TEST_topic-1 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2020-02-06 18:10:45,273] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-06 18:10:45,274] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-06 18:10:45,275] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(TEST_topic-0 -> Vector(2, 0)), 1 -> Map(TEST_topic-2 -> Vector(1, 2)), 0 -> Map(TEST_topic-1 -> Vector(0, 1))) (kafka.controller.KafkaController)
[2020-02-06 18:10:45,275] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-02-06 18:10:45,275] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-02-06 18:10:45,275] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-02-06 18:10:45,275] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-02-06 18:10:45,276] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-06 18:10:45,276] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-02-06 18:15:45,285] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-06 18:15:45,286] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-06 18:15:45,287] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(TEST_topic-0 -> Vector(2, 0)), 1 -> Map(TEST_topic-2 -> Vector(1, 2)), 0 -> Map(TEST_topic-1 -> Vector(0, 1))) (kafka.controller.KafkaController)
[2020-02-06 18:15:45,287] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-02-06 18:15:45,287] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-02-06 18:15:45,287] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-02-06 18:15:45,287] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-02-06 18:15:45,287] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-02-06 18:15:45,287] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
